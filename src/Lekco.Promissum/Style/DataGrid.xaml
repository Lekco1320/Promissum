<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cvt="clr-namespace:Lekco.Promissum.Utility.Converter">

    <cvt:FileIconGetter x:Key="FileIconGetter" />

    <Style x:Key="DataGridHyperLinkCellStyle"
           TargetType="{x:Type DataGridCell}">

        <Setter Property="HorizontalAlignment"
                Value="Stretch" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">

                    <TextBlock x:Name="TextBlock"
                               VerticalAlignment="Center"
                               Background="Transparent"
                               Cursor="Hand"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding Foreground}"
                               TextAlignment="Center">

                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}" />

                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding DataContext.HyperLinkCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                          CommandParameter="{Binding}"
                                          Gesture="LeftClick" />
                        </TextBlock.InputBindings>

                    </TextBlock>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="TextBlock"
                                    Property="TextBlock.TextDecorations"
                                    Value="Underline" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>

        </Setter>

        <Setter Property="VerticalAlignment"
                Value="Stretch" />

        <Style.Triggers>

            <MultiTrigger>

                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>

                <MultiTrigger.Setters>
                    <Setter Property="Foreground"
                            Value="{DynamicResource CDeepBlueBrush}" />
                </MultiTrigger.Setters>

            </MultiTrigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="DataGridFileNameCellStyle"
           BasedOn="{StaticResource {x:Type DataGridCell}}"
           TargetType="{x:Type DataGridCell}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">

                    <Grid>

                        <Image Width="12"
                               Height="12"
                               Margin="3,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Source="{Binding ElementName=Presenter, Path=Content.Text, Converter={StaticResource FileIconGetter}}" />

                        <TextBlock Margin="16,0,0,0"
                                   VerticalAlignment="Center"
                                   Background="Transparent"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   TextAlignment="Left">

                            <ContentPresenter Name="Presenter"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}" />

                        </TextBlock>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>