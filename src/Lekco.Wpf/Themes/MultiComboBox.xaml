<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:Lekco.Wpf.Control">

    <Style TargetType="{x:Type ctrl:MultiComboBoxItem}">

        <Setter Property="Foreground"
                Value="{DynamicResource CBlackBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:MultiComboBoxItem}">

                    <Border Name="PART_Border"
                            Padding="0,3"
                            Background="{DynamicResource CWhiteBrush}"
                            BorderBrush="{DynamicResource CGrayBrush}"
                            BorderThickness="0"
                            CornerRadius="3">

                        <CheckBox Name="PART_CheckBox"
                                  Margin="5,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Content="{TemplateBinding Content}"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsChecked="{TemplateBinding IsSelected}" />

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="PART_Border"
                                    Property="Background"
                                    Value="{DynamicResource GCBlueToCDeepBlueBrush}" />

                            <Setter Property="Foreground"
                                    Value="{DynamicResource CWhiteBrush}" />

                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="True">

                            <Setter TargetName="PART_Border"
                                    Property="Background"
                                    Value="{DynamicResource GCBlueToCDeepBlueBrush}" />

                            <Setter Property="Foreground"
                                    Value="{DynamicResource CWhiteBrush}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type ctrl:MultiComboBox}">

        <Setter Property="Foreground"
                Value="{DynamicResource CBlackBrush}" />

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Type ctrl:MultiComboBoxItem}}"
                       TargetType="{x:Type ctrl:MultiComboBoxItem}" />
            </Setter.Value>
        </Setter>

        <Setter Property="MaxDropDownHeight"
                Value="200" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:MultiComboBox}">

                    <Grid MinHeight="17.2"
                          Background="Transparent">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="18.5" />
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0"
                                MinHeight="16.8"
                                Background="{DynamicResource CWhiteBrush}"
                                BorderBrush="{DynamicResource CGrayBrush}"
                                BorderThickness="1,1,0,1"
                                CornerRadius="3,0,0,3" />

                        <Border Grid.Column="1"
                                Height="{TemplateBinding Height}"
                                Background="Transparent"
                                BorderBrush="{DynamicResource CGrayBrush}"
                                BorderThickness="1"
                                CornerRadius="0,3,3,0">

                            <ToggleButton ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{TemplateBinding IsEnabled}"
                                          Style="{DynamicResource ComboxStyleBtn}" />

                        </Border>

                        <TextBox x:Name="textbox"
                                 Grid.Column="0"
                                 Height="{TemplateBinding Height}"
                                 Margin="1,0,0,0"
                                 VerticalAlignment="Center"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 FontSize="{TemplateBinding FontSize}"
                                 Foreground="{DynamicResource CBlackBrush}"
                                 IsHitTestVisible="False"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Text="{TemplateBinding Text}" />

                        <ContentPresenter />

                        <Popup x:Name="Popup"
                               Width="auto"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Fade"
                               VerticalOffset="3">

                            <Border x:Name="DropDown"
                                    Width="{TemplateBinding ActualWidth}"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Margin="4,6,4,6"
                                    Background="{DynamicResource CWhiteBrush}"
                                    BorderBrush="{DynamicResource CGrayBrush}"
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="True">

                                <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              CanContentScroll="True"
                                              HorizontalScrollBarVisibility="Auto"
                                              SnapsToDevicePixels="True"
                                              VerticalScrollBarVisibility="Auto">

                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel Background="Transparent"
                                                IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />

                                </ScrollViewer>

                                <Border.Effect>

                                    <DropShadowEffect BlurRadius="3"
                                                      Direction="315"
                                                      Opacity="0.15"
                                                      ShadowDepth="2.5"
                                                      Color="{DynamicResource CBlack}" />

                                </Border.Effect>

                            </Border>

                        </Popup>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">

                            <Setter TargetName="textbox"
                                    Property="Opacity"
                                    Value="0.5" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="VerticalAlignment"
                Value="Center" />

    </Style>

</ResourceDictionary>